{
	"info": {
		"_postman_id": "b811ec8b-3af6-43f4-bb0c-7f0e6a6d4fad",
		"name": "backend",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"admin@admin.com\",\n    \"password\" :\"123456789\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"set Auth\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"JWT\",jsonData.access_token)",
									"    pm.expect(pm.environment.get(\"JWT\")).to.eql(jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"admin@admin.com\",\n    \"password\" :\"123456789\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "configs",
			"item": [
				{
					"name": "new Config A",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get configB ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"CONFIG_A\",jsonData.configId)",
									"    pm.expect(pm.environment.get(\"CONFIG_A\")).to.eql(jsonData.configId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"configA\",\n    \"maxPrice\":0.003\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/configurations",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"configurations"
							]
						}
					},
					"response": []
				},
				{
					"name": "new Config B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get configB ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"CONFIG_B\",jsonData.configId)",
									"    pm.expect(pm.environment.get(\"CONFIG_B\")).to.eql(jsonData.configId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"configB\",\n    \"maxPrice\":0.01,\n    \"class\":\"beast\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/configurations",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"configurations"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all configs",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"configB\",\n    \"maxPrice\":0.01,\n    \"class\":\"beast\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/configurations",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"configurations"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "instances",
			"item": [
				{
					"name": "new InstanceA",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"configId\":\"{{CONFIG_A}}\",\n    \"target\":1,\n    \"status\":0,\n    \"pk\":\"0xcf52867f76c9f7671d6744861bef35a71ef6e0276a901f2d91172ed6d017ad52\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/instances",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"instances"
							]
						}
					},
					"response": []
				},
				{
					"name": "new InstanceB",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"configId\":\"{{CONFIG_B}}\",\n    \"target\":1,\n    \"status\":0,\n    \"pk\":\"0xf81a403c471e165d9d0d405f39f922f3cd945e42db088a17018f0593b8cbb45b\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/instances",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"instances"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all Instances",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"configB\",\n    \"maxPrice\":0.01,\n    \"class\":\"beast\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/instances",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"instances"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Event Logs",
			"item": [
				{
					"name": "get All logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/event-logs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"event-logs"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Instance Log",
			"item": [
				{
					"name": "get All logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/instance-logs/fbe52c0e-a253-42d4-8651-b3ff9e4210fd",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"instance-logs",
								"fbe52c0e-a253-42d4-8651-b3ff9e4210fd"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "terminate",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"configB\",\n    \"maxPrice\":0.01,\n    \"class\":\"beast\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/instances/terminate/1f20a3ab-a9f4-48c4-b2df-af31f24c86b6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"instances",
						"terminate",
						"1f20a3ab-a9f4-48c4-b2df-af31f24c86b6"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{JWT}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}